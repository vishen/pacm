- Doen't take into account available <os>_<arch>
- Add back in checksums
- should be able to take arbitrary pacman config file

- Configurable filename format when writing binary files
- make it a cli program
- run abitary shell commands on archived file after it has downloaded

- Add built-in recipe packages
- Add a configurable recipe path for when looking for recipes
- pathsToCheck:
    - change name?
    - should be overrideable in each recipe
- Concurrency when downloading packages
- logging
- cli use
    - Set a package to "active" and symlink the recipe name to that package version
- cli status
    - shows currently installed locations and version
- cli update <recipe> <version>
    - this should add the pacmconfig and re-run
- cli add <recipe> <full_url>
    - this could extract the relevant version, arch and os infor from the url and create a new recipe?
    - not sure if possible..?

- run abitary shell commands on archived file after it has downloaded
    - Need to know the files before hand because currently everything is done in-memory and only binaries are written to disk
    - protoc could move the include directories to relevated locations
    - should have string interpolation
    - go you could add the following for each new version if wanted:
```
% cat bin/go1.4
#!/bin/sh

export GOARCH=amd64
export GOOS=darwin
export GOROOT=/home/r/go1.4  # Note! Should be wherever we installed it to.
export GOBIN=$GOROOT/bin

exec $GOBIN/go "$@"
%

Then when I want to run Go 1.4 tests, I just say "go1.4 build" instead of "go build".
``

- Multiple version of Go
    - https://medium.com/@vCabbage/go-installing-multiple-go-versions-from-source-db5573067c
